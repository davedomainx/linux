Achieve the following:

Server Preparation:
  little/no network/cpu traffic (sar -n TCP 1 ; iftop/ganglia).
  # Drop all caches
  echo 3 > /proc/sys/vm/drop_caches
Do : rsync, dd, cp, tc (?)
Also :  ring buffer size (client + server):
        "Change the settings to the maximum to optimize for throughput while possibly increasing latency."
          ethtool -g em1 ; ethtool -G rx 4076 em1
        IO scheduler (CFS?):
          partition or disk ?
          16+17 : deadline (!?)
          set to noop (grub elevator=noop)
            success!  CPU no longer sticks at 100% used when writing
        socket-queue sizes:
          /proc/sys/net/ipv4/tcp_wmem
          /proc/sys/net/ipv4/tcp_rmem
        RPCNFSDCOUNT:
        multiple clients:

== baselines etc ==

# set ring buffer : it seems this has little impact ..
ethtool -g <network device>
ethtool -G <newtork device> rx/tx 4096

# meh use iperf 
# socat test connectivity/bandwidth between points
#   UDP looks like about 25% faster than TCP .. 110MB sec UDP, vs 84MB sec TCP
sudo iptables -I INPUT 16 -p tcp -m --ctstate NEW -m tcp --dport 5000 -j ACCEPT
sudo iptables -I INPUT 16 -p udp -m --ctstate NEW -m udp --dport 5001 -j ACCEPT
sudo socat - tcp4-listen:5000
sudo socat - udp4-listen:5000
# client
pv < /dev/zero |socat - TCP:141.80.174.216:5000
pv < /dev/zero |socat - UDP:141.80.174.216:5001



== perform copy-tests ==

server:/tmp to server:/tmp
server:/tmp to server:/another-directory-location
server:/tmp to server:/export
server:/export to server:/export
client: to server:/export

==

Realworld testing fs16:
async,ac,1Msize
20G file to/from server..
 very consistent 60MB/sec, with all various options
real	6m18.142s
user	0m0.014s
sys	0m19.264s

20G file client to server


Test 1 : "normal" options
   + remove "noacl", that is a Solaris feature (man nfs)

rw,vers=3,rsize=32768,wsize=32768,namlen=255,acregmin=3,acregmax=60,acdirmin=30,acdirmax=60,
hard,proto=tcp,timeo=600,retrans=2,sec=sys,mountaddr=141.80.174.216,mountvers=3,
mountport=20048,mountproto=udp,local_lock=none

Test 2 : remove rsize/wsize
  should negotiate to highest size ( 1048576 bytes // 1 MB )
  should be faster

Test 3 : set "ac" // remove noac
  should be [much] faster

Test 4 : set actimeo=0
  should be [much] faster

Test 5 : set actimeo=0, noac
  should be [much] faster

Test 6 : set actimeo=0, noac, async
  should be the fastest
